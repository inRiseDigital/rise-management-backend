def receive(self, add_units, cost_per_unit):
        add = Decimal(str(add_units))
        cost = Decimal(str(cost_per_unit))
        old_total   = self.units_in_stock * self.unit_cost
        new_total   = add * cost
        total_units = self.units_in_stock + add

        # Compute raw weighted average
        raw = (old_total + new_total) / total_units if total_units else Decimal("0")
        # Quantize to 4 decimal places, rounding half up
        self.unit_cost = raw.quantize(Decimal("0.0001"), rounding=ROUND_HALF_UP)

        self.units_in_stock = total_units
        self.full_clean()
        self.save()

    def issue(self, rm_units):
        rm = Decimal(str(rm_units))
        if rm > self.units_in_stock:
            raise ValidationError("Insufficient stock to issue.")
        self.units_in_stock -= rm
        self.full_clean()
        self.save()